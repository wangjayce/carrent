<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sxt.bus.mapper.OutportMapper">
  <resultMap id="BaseResultMap" type="com.sxt.bus.domain.Outport">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="paytype" jdbcType="VARCHAR" property="paytype" />
    <result column="outporttime" jdbcType="DATE" property="outporttime" />
    <result column="operateperson" jdbcType="VARCHAR" property="operateperson" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="outportprice" jdbcType="DOUBLE" property="outportprice" />
    <result column="providerid" jdbcType="INTEGER" property="providerid" />
    <result column="goodsid" jdbcType="INTEGER" property="goodsid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, paytype, outporttime, operateperson, number, remark, outportprice, providerid, 
    goodsid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bus_outport
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bus_outport
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sxt.bus.domain.Outport">
    insert into bus_outport (id, paytype, outporttime, 
      operateperson, number, remark, 
      outportprice, providerid, goodsid
      )
    values (#{id,jdbcType=INTEGER}, #{paytype,jdbcType=VARCHAR}, #{outporttime,jdbcType=DATE}, 
      #{operateperson,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{outportprice,jdbcType=DOUBLE}, #{providerid,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sxt.bus.domain.Outport">
    insert into bus_outport
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="paytype != null">
        paytype,
      </if>
      <if test="outporttime != null">
        outporttime,
      </if>
      <if test="operateperson != null">
        operateperson,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="outportprice != null">
        outportprice,
      </if>
      <if test="providerid != null">
        providerid,
      </if>
      <if test="goodsid != null">
        goodsid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="paytype != null">
        #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="outporttime != null">
        #{outporttime,jdbcType=DATE},
      </if>
      <if test="operateperson != null">
        #{operateperson,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="outportprice != null">
        #{outportprice,jdbcType=DOUBLE},
      </if>
      <if test="providerid != null">
        #{providerid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxt.bus.domain.Outport">
    update bus_outport
    <set>
      <if test="paytype != null">
        paytype = #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="outporttime != null">
        outporttime = #{outporttime,jdbcType=DATE},
      </if>
      <if test="operateperson != null">
        operateperson = #{operateperson,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="outportprice != null">
        outportprice = #{outportprice,jdbcType=DOUBLE},
      </if>
      <if test="providerid != null">
        providerid = #{providerid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        goodsid = #{goodsid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxt.bus.domain.Outport">
    update bus_outport
    set paytype = #{paytype,jdbcType=VARCHAR},
      outporttime = #{outporttime,jdbcType=DATE},
      operateperson = #{operateperson,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      outportprice = #{outportprice,jdbcType=DOUBLE},
      providerid = #{providerid,jdbcType=INTEGER},
      goodsid = #{goodsid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <resultMap id="MyResultMap" type="com.sxt.bus.domain.Outport">
   	 <result column="goodsname" jdbcType="VARCHAR" property="goodsname" />
   	 <result column="providername" jdbcType="VARCHAR" property="providername" />
   </resultMap>
   
    <select id="queryAllOutport" parameterType="com.sxt.bus.vo.OutportVo" resultMap="BaseResultMap">
    select t1.*,t2.providername,t3.goodsname from bus_outport t1 join
		bus_provider t2 join bus_goods t3 on (t1.providerid=t2.id and
		t1.goodsid=t3.id)
		<where>
			<if test="goodsname!=null">
	    		and t3.goodsname like "%"#{goodsname}"%"
	    	</if>
	    	<if test="providername!=null">
	    		and t2.providername like "%"#{providername}"%"
	    	</if>
	    	<if test="startDate!=null">
	    		and outporttime &gt;=  #{startDate}
	    	</if>
	    	<if test="endDate!=null">
	    		and outporttime <![CDATA[<=]]> #{endDate}
	    	</if>
	    	<if test="providerid!=null">
	    		and t1.providerid = #{providerid}
	    	</if>
		</where>
		order by outporttime desc
  </select>
</mapper>